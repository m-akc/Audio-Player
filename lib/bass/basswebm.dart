// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: non_constant_identifier_names, camel_case_types, constant_identifier_names

import 'dart:ffi' as ffi;

/// Bindings to `basswebm.h`.
class Basswebm {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  Basswebm(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  Basswebm.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int BASS_WEBM_StreamCreateFile(
    int mem,
    ffi.Pointer<ffi.Void> file,
    int offset,
    int length,
    int flags,
    int track,
  ) {
    return _BASS_WEBM_StreamCreateFile(
      mem,
      file,
      offset,
      length,
      flags,
      track,
    );
  }

  late final _BASS_WEBM_StreamCreateFilePtr = _lookup<
      ffi.NativeFunction<
          HSTREAM Function(BOOL, ffi.Pointer<ffi.Void>, QWORD, QWORD, DWORD,
              DWORD)>>('BASS_WEBM_StreamCreateFile');
  late final _BASS_WEBM_StreamCreateFile = _BASS_WEBM_StreamCreateFilePtr
      .asFunction<int Function(int, ffi.Pointer<ffi.Void>, int, int, int, int)>(
          isLeaf: true);

  int BASS_WEBM_StreamCreateURL(
    ffi.Pointer<ffi.Int8> url,
    int offset,
    int flags,
    ffi.Pointer<
            ffi.NativeFunction<
                ffi.Void Function(
                    ffi.Pointer<ffi.Void>, DWORD, ffi.Pointer<ffi.Void>)>>
        proc,
    ffi.Pointer<ffi.Void> user,
    int track,
  ) {
    return _BASS_WEBM_StreamCreateURL(
      url,
      offset,
      flags,
      proc,
      user,
      track,
    );
  }

  late final _BASS_WEBM_StreamCreateURLPtr = _lookup<
      ffi.NativeFunction<
          HSTREAM Function(
              ffi.Pointer<ffi.Int8>,
              DWORD,
              DWORD,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>, DWORD,
                          ffi.Pointer<ffi.Void>)>>,
              ffi.Pointer<ffi.Void>,
              DWORD)>>('BASS_WEBM_StreamCreateURL');
  late final _BASS_WEBM_StreamCreateURL =
      _BASS_WEBM_StreamCreateURLPtr.asFunction<
          int Function(
              ffi.Pointer<ffi.Int8>,
              int,
              int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>, DWORD,
                          ffi.Pointer<ffi.Void>)>>,
              ffi.Pointer<ffi.Void>,
              int)>(isLeaf: true);

  int BASS_WEBM_StreamCreateFileUser(
    int system,
    int flags,
    ffi.Pointer<BASS_FILEPROCS> procs,
    ffi.Pointer<ffi.Void> user,
    int track,
  ) {
    return _BASS_WEBM_StreamCreateFileUser(
      system,
      flags,
      procs,
      user,
      track,
    );
  }

  late final _BASS_WEBM_StreamCreateFileUserPtr = _lookup<
      ffi.NativeFunction<
          HSTREAM Function(DWORD, DWORD, ffi.Pointer<BASS_FILEPROCS>,
              ffi.Pointer<ffi.Void>, DWORD)>>('BASS_WEBM_StreamCreateFileUser');
  late final _BASS_WEBM_StreamCreateFileUser =
      _BASS_WEBM_StreamCreateFileUserPtr.asFunction<
          int Function(int, int, ffi.Pointer<BASS_FILEPROCS>,
              ffi.Pointer<ffi.Void>, int)>(isLeaf: true);
}

typedef HSTREAM = DWORD;
typedef DWORD = ffi.Uint64;
typedef BOOL = ffi.Int32;
typedef QWORD = ffi.Uint64;

class BASS_FILEPROCS extends ffi.Struct {
  external ffi
          .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>
      close;

  external ffi
          .Pointer<ffi.NativeFunction<QWORD Function(ffi.Pointer<ffi.Void>)>>
      length;

  external ffi.Pointer<
      ffi.NativeFunction<
          DWORD Function(
              ffi.Pointer<ffi.Void>, DWORD, ffi.Pointer<ffi.Void>)>> read;

  external ffi.Pointer<
      ffi.NativeFunction<BOOL Function(QWORD, ffi.Pointer<ffi.Void>)>> seek;
}

const int BASS_ERROR_NOTAUDIO = 17;

const int BASS_ERROR_WEBM_TRACK = 8000;

const int BASS_TAG_WEBM = 86016;

const int BASS_TAG_WEBM_TRACK = 86017;

const int BASS_ATTRIB_WEBM_TRACK = 90112;

const int BASS_ATTRIB_WEBM_TRACKS = 90113;
