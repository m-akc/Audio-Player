// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: non_constant_identifier_names, constant_identifier_names

import 'dart:ffi' as ffi;

/// Bindings to `basshls.h`.
class Basshls {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  Basshls(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  Basshls.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int BASS_HLS_StreamCreateFile(
    int mem,
    ffi.Pointer<ffi.Void> file,
    int offset,
    int length,
    int flags,
  ) {
    return _BASS_HLS_StreamCreateFile(
      mem,
      file,
      offset,
      length,
      flags,
    );
  }

  late final _BASS_HLS_StreamCreateFilePtr = _lookup<
      ffi.NativeFunction<
          HSTREAM Function(BOOL, ffi.Pointer<ffi.Void>, QWORD, QWORD,
              DWORD)>>('BASS_HLS_StreamCreateFile');
  late final _BASS_HLS_StreamCreateFile = _BASS_HLS_StreamCreateFilePtr
      .asFunction<int Function(int, ffi.Pointer<ffi.Void>, int, int, int)>(
          isLeaf: true);

  int BASS_HLS_StreamCreateURL(
    ffi.Pointer<ffi.Int8> url,
    int flags,
    ffi.Pointer<
            ffi.NativeFunction<
                ffi.Void Function(
                    ffi.Pointer<ffi.Void>, DWORD, ffi.Pointer<ffi.Void>)>>
        proc,
    ffi.Pointer<ffi.Void> user,
  ) {
    return _BASS_HLS_StreamCreateURL(
      url,
      flags,
      proc,
      user,
    );
  }

  late final _BASS_HLS_StreamCreateURLPtr = _lookup<
      ffi.NativeFunction<
          HSTREAM Function(
              ffi.Pointer<ffi.Int8>,
              DWORD,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>, DWORD,
                          ffi.Pointer<ffi.Void>)>>,
              ffi.Pointer<ffi.Void>)>>('BASS_HLS_StreamCreateURL');
  late final _BASS_HLS_StreamCreateURL =
      _BASS_HLS_StreamCreateURLPtr.asFunction<
          int Function(
              ffi.Pointer<ffi.Int8>,
              int,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>, DWORD,
                          ffi.Pointer<ffi.Void>)>>,
              ffi.Pointer<ffi.Void>)>(isLeaf: true);
}

typedef HSTREAM = DWORD;
typedef DWORD = ffi.Uint64;
typedef BOOL = ffi.Int32;
typedef QWORD = ffi.Uint64;

const int BASS_CONFIG_HLS_DOWNLOAD_TAGS = 67840;

const int BASS_CONFIG_HLS_BANDWIDTH = 67841;

const int BASS_CONFIG_HLS_DELAY = 67842;

const int BASS_CONFIG_HLS_TSSCAN = 67843;

const int BASS_SYNC_HLS_SEGMENT = 66304;

const int BASS_SYNC_HLS_SDT = 66305;

const int BASS_TAG_HLS_EXTINF = 81920;

const int BASS_TAG_HLS_STREAMINF = 81921;

const int BASS_TAG_HLS_DATE = 81922;

const int BASS_TAG_HLS_SDT = 81923;

const int BASS_FILEPOS_HLS_SEGMENT = 65536;
